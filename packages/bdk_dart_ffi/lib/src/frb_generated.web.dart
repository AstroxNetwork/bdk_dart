// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.11.1.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'api.dart';
import 'bdk/blockchain.dart';
import 'bdk/types.dart';
import 'bdk/wallet.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';
import 'secp256k1.dart';
import 'types.dart';

abstract class BdkDartApiImplPlatform extends BaseApiImpl<BdkDartWire> {
  BdkDartApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BdkDescriptorPtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_BdkDescriptor;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_BlockchainInstancePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_BlockchainInstance;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_WalletInstancePtr =>
          wire.rust_arc_decrement_strong_count_RustOpaque_WalletInstance;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  BdkDescriptor dco_decode_RustOpaque_BdkDescriptor(dynamic raw);

  @protected
  BlockchainInstance dco_decode_RustOpaque_BlockchainInstance(dynamic raw);

  @protected
  WalletInstance dco_decode_RustOpaque_WalletInstance(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  AddressIndex dco_decode_address_index(dynamic raw);

  @protected
  AddressInfo dco_decode_address_info(dynamic raw);

  @protected
  Api dco_decode_api(dynamic raw);

  @protected
  Balance dco_decode_balance(dynamic raw);

  @protected
  BdkTxBuilderResult dco_decode_bdk_tx_builder_result(dynamic raw);

  @protected
  BlockTime dco_decode_block_time(dynamic raw);

  @protected
  BlockchainConfig dco_decode_blockchain_config(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  BdkDescriptor dco_decode_box_autoadd_RustOpaque_BdkDescriptor(dynamic raw);

  @protected
  AddressIndex dco_decode_box_autoadd_address_index(dynamic raw);

  @protected
  BlockTime dco_decode_box_autoadd_block_time(dynamic raw);

  @protected
  BlockchainConfig dco_decode_box_autoadd_blockchain_config(dynamic raw);

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw);

  @protected
  DatabaseConfig dco_decode_box_autoadd_database_config(dynamic raw);

  @protected
  ElectrumConfig dco_decode_box_autoadd_electrum_config(dynamic raw);

  @protected
  EsploraConfig dco_decode_box_autoadd_esplora_config(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_32(dynamic raw);

  @protected
  RbfValue dco_decode_box_autoadd_rbf_value(dynamic raw);

  @protected
  RpcConfig dco_decode_box_autoadd_rpc_config(dynamic raw);

  @protected
  RpcSyncParams dco_decode_box_autoadd_rpc_sync_params(dynamic raw);

  @protected
  Script dco_decode_box_autoadd_script(dynamic raw);

  @protected
  Secp256k1FromSeedReq dco_decode_box_autoadd_secp_256_k_1_from_seed_req(
      dynamic raw);

  @protected
  Secp256k1RecoverReq dco_decode_box_autoadd_secp_256_k_1_recover_req(
      dynamic raw);

  @protected
  Secp256k1ShareSecretReq dco_decode_box_autoadd_secp_256_k_1_share_secret_req(
      dynamic raw);

  @protected
  Secp256k1SignWithRngReq dco_decode_box_autoadd_secp_256_k_1_sign_with_rng_req(
      dynamic raw);

  @protected
  Secp256k1SignWithSeedReq
      dco_decode_box_autoadd_secp_256_k_1_sign_with_seed_req(dynamic raw);

  @protected
  Secp256k1VerifyReq dco_decode_box_autoadd_secp_256_k_1_verify_req(
      dynamic raw);

  @protected
  SignOptions dco_decode_box_autoadd_sign_options(dynamic raw);

  @protected
  SledDbConfiguration dco_decode_box_autoadd_sled_db_configuration(dynamic raw);

  @protected
  SqliteDbConfiguration dco_decode_box_autoadd_sqlite_db_configuration(
      dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw);

  @protected
  BigInt dco_decode_box_autoadd_u_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_u_8(dynamic raw);

  @protected
  UserPass dco_decode_box_autoadd_user_pass(dynamic raw);

  @protected
  ChangeSpendPolicy dco_decode_change_spend_policy(dynamic raw);

  @protected
  DatabaseConfig dco_decode_database_config(dynamic raw);

  @protected
  ElectrumConfig dco_decode_electrum_config(dynamic raw);

  @protected
  EsploraConfig dco_decode_esplora_config(dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  ForeignUtxo dco_decode_foreign_utxo(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  KeychainKind dco_decode_keychain_kind(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<ForeignUtxo> dco_decode_list_foreign_utxo(dynamic raw);

  @protected
  List<LocalUtxo> dco_decode_list_local_utxo(dynamic raw);

  @protected
  List<OutPoint> dco_decode_list_out_point(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<ScriptAmount> dco_decode_list_script_amount(dynamic raw);

  @protected
  List<TransactionDetails> dco_decode_list_transaction_details(dynamic raw);

  @protected
  List<TxBytes> dco_decode_list_tx_bytes(dynamic raw);

  @protected
  List<TxIn> dco_decode_list_tx_in(dynamic raw);

  @protected
  List<TxOut> dco_decode_list_tx_out(dynamic raw);

  @protected
  LocalUtxo dco_decode_local_utxo(dynamic raw);

  @protected
  Network dco_decode_network(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  BdkDescriptor? dco_decode_opt_box_autoadd_RustOpaque_BdkDescriptor(
      dynamic raw);

  @protected
  BlockTime? dco_decode_opt_box_autoadd_block_time(dynamic raw);

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_32(dynamic raw);

  @protected
  RbfValue? dco_decode_opt_box_autoadd_rbf_value(dynamic raw);

  @protected
  RpcSyncParams? dco_decode_opt_box_autoadd_rpc_sync_params(dynamic raw);

  @protected
  Script? dco_decode_opt_box_autoadd_script(dynamic raw);

  @protected
  SignOptions? dco_decode_opt_box_autoadd_sign_options(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw);

  @protected
  BigInt? dco_decode_opt_box_autoadd_u_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_u_8(dynamic raw);

  @protected
  UserPass? dco_decode_opt_box_autoadd_user_pass(dynamic raw);

  @protected
  Uint8List? dco_decode_opt_list_prim_u_8_strict(dynamic raw);

  @protected
  OutPoint dco_decode_out_point(dynamic raw);

  @protected
  Payload dco_decode_payload(dynamic raw);

  @protected
  RbfValue dco_decode_rbf_value(dynamic raw);

  @protected
  RpcConfig dco_decode_rpc_config(dynamic raw);

  @protected
  RpcSyncParams dco_decode_rpc_sync_params(dynamic raw);

  @protected
  Script dco_decode_script(dynamic raw);

  @protected
  ScriptAmount dco_decode_script_amount(dynamic raw);

  @protected
  Secp256k1FromSeedReq dco_decode_secp_256_k_1_from_seed_req(dynamic raw);

  @protected
  Secp256k1IdentityExport dco_decode_secp_256_k_1_identity_export(dynamic raw);

  @protected
  Secp256k1RecoverReq dco_decode_secp_256_k_1_recover_req(dynamic raw);

  @protected
  Secp256k1ShareSecretReq dco_decode_secp_256_k_1_share_secret_req(dynamic raw);

  @protected
  Secp256k1SignWithRngReq dco_decode_secp_256_k_1_sign_with_rng_req(
      dynamic raw);

  @protected
  Secp256k1SignWithSeedReq dco_decode_secp_256_k_1_sign_with_seed_req(
      dynamic raw);

  @protected
  Secp256k1VerifyReq dco_decode_secp_256_k_1_verify_req(dynamic raw);

  @protected
  SignOptions dco_decode_sign_options(dynamic raw);

  @protected
  SignatureFFI dco_decode_signature_ffi(dynamic raw);

  @protected
  SledDbConfiguration dco_decode_sled_db_configuration(dynamic raw);

  @protected
  SqliteDbConfiguration dco_decode_sqlite_db_configuration(dynamic raw);

  @protected
  TransactionDetails dco_decode_transaction_details(dynamic raw);

  @protected
  TxBytes dco_decode_tx_bytes(dynamic raw);

  @protected
  TxIn dco_decode_tx_in(dynamic raw);

  @protected
  TxOut dco_decode_tx_out(dynamic raw);

  @protected
  TxOutForeign dco_decode_tx_out_foreign(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  BigInt dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  UserPass dco_decode_user_pass(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  WitnessVersion dco_decode_witness_version(dynamic raw);

  @protected
  WordCount dco_decode_word_count(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  BdkDescriptor sse_decode_RustOpaque_BdkDescriptor(
      SseDeserializer deserializer);

  @protected
  BlockchainInstance sse_decode_RustOpaque_BlockchainInstance(
      SseDeserializer deserializer);

  @protected
  WalletInstance sse_decode_RustOpaque_WalletInstance(
      SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  AddressIndex sse_decode_address_index(SseDeserializer deserializer);

  @protected
  AddressInfo sse_decode_address_info(SseDeserializer deserializer);

  @protected
  Api sse_decode_api(SseDeserializer deserializer);

  @protected
  Balance sse_decode_balance(SseDeserializer deserializer);

  @protected
  BdkTxBuilderResult sse_decode_bdk_tx_builder_result(
      SseDeserializer deserializer);

  @protected
  BlockTime sse_decode_block_time(SseDeserializer deserializer);

  @protected
  BlockchainConfig sse_decode_blockchain_config(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  BdkDescriptor sse_decode_box_autoadd_RustOpaque_BdkDescriptor(
      SseDeserializer deserializer);

  @protected
  AddressIndex sse_decode_box_autoadd_address_index(
      SseDeserializer deserializer);

  @protected
  BlockTime sse_decode_box_autoadd_block_time(SseDeserializer deserializer);

  @protected
  BlockchainConfig sse_decode_box_autoadd_blockchain_config(
      SseDeserializer deserializer);

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  DatabaseConfig sse_decode_box_autoadd_database_config(
      SseDeserializer deserializer);

  @protected
  ElectrumConfig sse_decode_box_autoadd_electrum_config(
      SseDeserializer deserializer);

  @protected
  EsploraConfig sse_decode_box_autoadd_esplora_config(
      SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  RbfValue sse_decode_box_autoadd_rbf_value(SseDeserializer deserializer);

  @protected
  RpcConfig sse_decode_box_autoadd_rpc_config(SseDeserializer deserializer);

  @protected
  RpcSyncParams sse_decode_box_autoadd_rpc_sync_params(
      SseDeserializer deserializer);

  @protected
  Script sse_decode_box_autoadd_script(SseDeserializer deserializer);

  @protected
  Secp256k1FromSeedReq sse_decode_box_autoadd_secp_256_k_1_from_seed_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1RecoverReq sse_decode_box_autoadd_secp_256_k_1_recover_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1ShareSecretReq sse_decode_box_autoadd_secp_256_k_1_share_secret_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1SignWithRngReq sse_decode_box_autoadd_secp_256_k_1_sign_with_rng_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1SignWithSeedReq
      sse_decode_box_autoadd_secp_256_k_1_sign_with_seed_req(
          SseDeserializer deserializer);

  @protected
  Secp256k1VerifyReq sse_decode_box_autoadd_secp_256_k_1_verify_req(
      SseDeserializer deserializer);

  @protected
  SignOptions sse_decode_box_autoadd_sign_options(SseDeserializer deserializer);

  @protected
  SledDbConfiguration sse_decode_box_autoadd_sled_db_configuration(
      SseDeserializer deserializer);

  @protected
  SqliteDbConfiguration sse_decode_box_autoadd_sqlite_db_configuration(
      SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  UserPass sse_decode_box_autoadd_user_pass(SseDeserializer deserializer);

  @protected
  ChangeSpendPolicy sse_decode_change_spend_policy(
      SseDeserializer deserializer);

  @protected
  DatabaseConfig sse_decode_database_config(SseDeserializer deserializer);

  @protected
  ElectrumConfig sse_decode_electrum_config(SseDeserializer deserializer);

  @protected
  EsploraConfig sse_decode_esplora_config(SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  ForeignUtxo sse_decode_foreign_utxo(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  KeychainKind sse_decode_keychain_kind(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<ForeignUtxo> sse_decode_list_foreign_utxo(SseDeserializer deserializer);

  @protected
  List<LocalUtxo> sse_decode_list_local_utxo(SseDeserializer deserializer);

  @protected
  List<OutPoint> sse_decode_list_out_point(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<ScriptAmount> sse_decode_list_script_amount(
      SseDeserializer deserializer);

  @protected
  List<TransactionDetails> sse_decode_list_transaction_details(
      SseDeserializer deserializer);

  @protected
  List<TxBytes> sse_decode_list_tx_bytes(SseDeserializer deserializer);

  @protected
  List<TxIn> sse_decode_list_tx_in(SseDeserializer deserializer);

  @protected
  List<TxOut> sse_decode_list_tx_out(SseDeserializer deserializer);

  @protected
  LocalUtxo sse_decode_local_utxo(SseDeserializer deserializer);

  @protected
  Network sse_decode_network(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  BdkDescriptor? sse_decode_opt_box_autoadd_RustOpaque_BdkDescriptor(
      SseDeserializer deserializer);

  @protected
  BlockTime? sse_decode_opt_box_autoadd_block_time(
      SseDeserializer deserializer);

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_32(SseDeserializer deserializer);

  @protected
  RbfValue? sse_decode_opt_box_autoadd_rbf_value(SseDeserializer deserializer);

  @protected
  RpcSyncParams? sse_decode_opt_box_autoadd_rpc_sync_params(
      SseDeserializer deserializer);

  @protected
  Script? sse_decode_opt_box_autoadd_script(SseDeserializer deserializer);

  @protected
  SignOptions? sse_decode_opt_box_autoadd_sign_options(
      SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer);

  @protected
  BigInt? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_u_8(SseDeserializer deserializer);

  @protected
  UserPass? sse_decode_opt_box_autoadd_user_pass(SseDeserializer deserializer);

  @protected
  Uint8List? sse_decode_opt_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  OutPoint sse_decode_out_point(SseDeserializer deserializer);

  @protected
  Payload sse_decode_payload(SseDeserializer deserializer);

  @protected
  RbfValue sse_decode_rbf_value(SseDeserializer deserializer);

  @protected
  RpcConfig sse_decode_rpc_config(SseDeserializer deserializer);

  @protected
  RpcSyncParams sse_decode_rpc_sync_params(SseDeserializer deserializer);

  @protected
  Script sse_decode_script(SseDeserializer deserializer);

  @protected
  ScriptAmount sse_decode_script_amount(SseDeserializer deserializer);

  @protected
  Secp256k1FromSeedReq sse_decode_secp_256_k_1_from_seed_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1IdentityExport sse_decode_secp_256_k_1_identity_export(
      SseDeserializer deserializer);

  @protected
  Secp256k1RecoverReq sse_decode_secp_256_k_1_recover_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1ShareSecretReq sse_decode_secp_256_k_1_share_secret_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1SignWithRngReq sse_decode_secp_256_k_1_sign_with_rng_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1SignWithSeedReq sse_decode_secp_256_k_1_sign_with_seed_req(
      SseDeserializer deserializer);

  @protected
  Secp256k1VerifyReq sse_decode_secp_256_k_1_verify_req(
      SseDeserializer deserializer);

  @protected
  SignOptions sse_decode_sign_options(SseDeserializer deserializer);

  @protected
  SignatureFFI sse_decode_signature_ffi(SseDeserializer deserializer);

  @protected
  SledDbConfiguration sse_decode_sled_db_configuration(
      SseDeserializer deserializer);

  @protected
  SqliteDbConfiguration sse_decode_sqlite_db_configuration(
      SseDeserializer deserializer);

  @protected
  TransactionDetails sse_decode_transaction_details(
      SseDeserializer deserializer);

  @protected
  TxBytes sse_decode_tx_bytes(SseDeserializer deserializer);

  @protected
  TxIn sse_decode_tx_in(SseDeserializer deserializer);

  @protected
  TxOut sse_decode_tx_out(SseDeserializer deserializer);

  @protected
  TxOutForeign sse_decode_tx_out_foreign(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  UserPass sse_decode_user_pass(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  WitnessVersion sse_decode_witness_version(SseDeserializer deserializer);

  @protected
  WordCount sse_decode_word_count(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BdkDescriptor(
      BdkDescriptor self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_BlockchainInstance(
      BlockchainInstance self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_WalletInstance(
      WalletInstance self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_address_index(AddressIndex self, SseSerializer serializer);

  @protected
  void sse_encode_address_info(AddressInfo self, SseSerializer serializer);

  @protected
  void sse_encode_api(Api self, SseSerializer serializer);

  @protected
  void sse_encode_balance(Balance self, SseSerializer serializer);

  @protected
  void sse_encode_bdk_tx_builder_result(
      BdkTxBuilderResult self, SseSerializer serializer);

  @protected
  void sse_encode_block_time(BlockTime self, SseSerializer serializer);

  @protected
  void sse_encode_blockchain_config(
      BlockchainConfig self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_RustOpaque_BdkDescriptor(
      BdkDescriptor self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_address_index(
      AddressIndex self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_block_time(
      BlockTime self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_blockchain_config(
      BlockchainConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_database_config(
      DatabaseConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_electrum_config(
      ElectrumConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_esplora_config(
      EsploraConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_rbf_value(
      RbfValue self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_rpc_config(
      RpcConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_rpc_sync_params(
      RpcSyncParams self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_script(Script self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_secp_256_k_1_from_seed_req(
      Secp256k1FromSeedReq self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_secp_256_k_1_recover_req(
      Secp256k1RecoverReq self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_secp_256_k_1_share_secret_req(
      Secp256k1ShareSecretReq self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_secp_256_k_1_sign_with_rng_req(
      Secp256k1SignWithRngReq self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_secp_256_k_1_sign_with_seed_req(
      Secp256k1SignWithSeedReq self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_secp_256_k_1_verify_req(
      Secp256k1VerifyReq self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sign_options(
      SignOptions self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sled_db_configuration(
      SledDbConfiguration self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sqlite_db_configuration(
      SqliteDbConfiguration self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_user_pass(
      UserPass self, SseSerializer serializer);

  @protected
  void sse_encode_change_spend_policy(
      ChangeSpendPolicy self, SseSerializer serializer);

  @protected
  void sse_encode_database_config(
      DatabaseConfig self, SseSerializer serializer);

  @protected
  void sse_encode_electrum_config(
      ElectrumConfig self, SseSerializer serializer);

  @protected
  void sse_encode_esplora_config(EsploraConfig self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_foreign_utxo(ForeignUtxo self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_keychain_kind(KeychainKind self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_foreign_utxo(
      List<ForeignUtxo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_local_utxo(
      List<LocalUtxo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_out_point(List<OutPoint> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_script_amount(
      List<ScriptAmount> self, SseSerializer serializer);

  @protected
  void sse_encode_list_transaction_details(
      List<TransactionDetails> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_bytes(List<TxBytes> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_in(List<TxIn> self, SseSerializer serializer);

  @protected
  void sse_encode_list_tx_out(List<TxOut> self, SseSerializer serializer);

  @protected
  void sse_encode_local_utxo(LocalUtxo self, SseSerializer serializer);

  @protected
  void sse_encode_network(Network self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_RustOpaque_BdkDescriptor(
      BdkDescriptor? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_block_time(
      BlockTime? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_32(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_rbf_value(
      RbfValue? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_rpc_sync_params(
      RpcSyncParams? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_script(
      Script? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_sign_options(
      SignOptions? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(BigInt? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_8(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_user_pass(
      UserPass? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_8_strict(
      Uint8List? self, SseSerializer serializer);

  @protected
  void sse_encode_out_point(OutPoint self, SseSerializer serializer);

  @protected
  void sse_encode_payload(Payload self, SseSerializer serializer);

  @protected
  void sse_encode_rbf_value(RbfValue self, SseSerializer serializer);

  @protected
  void sse_encode_rpc_config(RpcConfig self, SseSerializer serializer);

  @protected
  void sse_encode_rpc_sync_params(RpcSyncParams self, SseSerializer serializer);

  @protected
  void sse_encode_script(Script self, SseSerializer serializer);

  @protected
  void sse_encode_script_amount(ScriptAmount self, SseSerializer serializer);

  @protected
  void sse_encode_secp_256_k_1_from_seed_req(
      Secp256k1FromSeedReq self, SseSerializer serializer);

  @protected
  void sse_encode_secp_256_k_1_identity_export(
      Secp256k1IdentityExport self, SseSerializer serializer);

  @protected
  void sse_encode_secp_256_k_1_recover_req(
      Secp256k1RecoverReq self, SseSerializer serializer);

  @protected
  void sse_encode_secp_256_k_1_share_secret_req(
      Secp256k1ShareSecretReq self, SseSerializer serializer);

  @protected
  void sse_encode_secp_256_k_1_sign_with_rng_req(
      Secp256k1SignWithRngReq self, SseSerializer serializer);

  @protected
  void sse_encode_secp_256_k_1_sign_with_seed_req(
      Secp256k1SignWithSeedReq self, SseSerializer serializer);

  @protected
  void sse_encode_secp_256_k_1_verify_req(
      Secp256k1VerifyReq self, SseSerializer serializer);

  @protected
  void sse_encode_sign_options(SignOptions self, SseSerializer serializer);

  @protected
  void sse_encode_signature_ffi(SignatureFFI self, SseSerializer serializer);

  @protected
  void sse_encode_sled_db_configuration(
      SledDbConfiguration self, SseSerializer serializer);

  @protected
  void sse_encode_sqlite_db_configuration(
      SqliteDbConfiguration self, SseSerializer serializer);

  @protected
  void sse_encode_transaction_details(
      TransactionDetails self, SseSerializer serializer);

  @protected
  void sse_encode_tx_bytes(TxBytes self, SseSerializer serializer);

  @protected
  void sse_encode_tx_in(TxIn self, SseSerializer serializer);

  @protected
  void sse_encode_tx_out(TxOut self, SseSerializer serializer);

  @protected
  void sse_encode_tx_out_foreign(TxOutForeign self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_user_pass(UserPass self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_witness_version(
      WitnessVersion self, SseSerializer serializer);

  @protected
  void sse_encode_word_count(WordCount self, SseSerializer serializer);
}

// Section: wire_class

class BdkDartWire implements BaseWire {
  BdkDartWire.fromExternalLibrary(ExternalLibrary lib);

  void rust_arc_increment_strong_count_RustOpaque_BdkDescriptor(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_BdkDescriptor(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BdkDescriptor(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_BdkDescriptor(ptr);

  void rust_arc_increment_strong_count_RustOpaque_BlockchainInstance(int ptr) =>
      wasmModule
          .rust_arc_increment_strong_count_RustOpaque_BlockchainInstance(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_BlockchainInstance(int ptr) =>
      wasmModule
          .rust_arc_decrement_strong_count_RustOpaque_BlockchainInstance(ptr);

  void rust_arc_increment_strong_count_RustOpaque_WalletInstance(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_WalletInstance(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_WalletInstance(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_WalletInstance(ptr);
}

@JS('wasm_bindgen')
external BdkDartWasmModule get wasmModule;

@JS()
@anonymous
extension type BdkDartWasmModule._(JSObject _) implements JSObject {
  external void rust_arc_increment_strong_count_RustOpaque_BdkDescriptor(
      int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_BdkDescriptor(
      int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_BlockchainInstance(
      int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_BlockchainInstance(
      int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_WalletInstance(
      int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_WalletInstance(
      int ptr);
}
